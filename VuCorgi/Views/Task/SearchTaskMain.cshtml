@model MainLibrary.Entity.WebCenter.TaskWeb[]
@{
    int count = 0;
}
<table id="datatable_tabletools" class="table table-striped table-bordered table-hover" width="100%">
    <thead>
        <tr>
            <th data-class="expand">Name</th>
            <th data-hide="always">Description</th>
            <th data-hide="always">Type</th>
            <th data-hide="always">Estimate</th>
            <th data-hide="always">Startime</th>
            <th data-hide="always">Endtime</th>
            <th data-hide="phone,tablet">Cost (VND)</th>
            <th data-hide="phone,tablet">Deadline</th>
            <th>Duration (mins)</th>
            <th data-hide="phone,tablet">Excuter</th>
            <th data-hide="phone,tablet">Status</th>
            <th data-hide="always">Assign to</th>
            @*<th data-hide="phone">Last modified</th>
        <th data-hide="phone,tablet">Editer</th>*@
            <th data-hide="phone,tablet">Action</th>
        </tr>
    </thead>
    <tbody>


        <!-- MAIN CONTENT -->

        @foreach (var item in Model)
        {
            <tr id="datarow-@item.Id.ToString()" class="@item.TrCss">
                <td>@(item.Name)</td>
                <td>@(item.Description)</td>
                <td>@(item.TypeName)</td>
                <td>@item.Estimate</td>
                <td>@item.StartTime</td>
                <td>@item.FinishTime</td>
                <td>@(string.Format(System.Globalization.CultureInfo.GetCultureInfo("vi-VN"), "{0:c}",item.Cost))</td>
                <td>@item.Deadline</td>
                <td>@item.Duration</td>
                <td>@item.ExecutorName</td>
                <td>@item.Status</td>
                <td>@item.TagetUserName</td>
                @*<td>@item.LastModified</td>
                    <td>@item.Editer</td>*@

                <td>
                    <a href="#" id="dialog_modal-@count" data-modalId="@item.Id" class="btn btn-xs btn-info">Action</a>
                    <a class="btn btn-xs btn-info" href="@Url.Action("TaskDetails",new {id = item.Id })">Details</a>
                    @if (item.IsActive)
                    {
                        <a href="#" id="dialog_link-@count" data-itemId="@item.Id" class="btn btn-xs btn-warning">Disable</a>
                    }
                    else
                    {
                        <a href="#" id="dialog_link-@count" data-itemId="@item.Id" class="btn btn-xs btn-success">Enable</a>
                    }
                    @*@if (((HttpContext.Current.User as BasicWeb.Security.WebPrincipal) ?? new BasicWeb.Security.WebPrincipal(string.Empty)).UserDetail.IsAdmin)
                        {
                            <a href="#" id="dialog_delete-@count" data-deleteId="@item.Id" class="btn btn-xs btn-danger">Delete</a>
                        }*@
                </td>
            </tr>
            count++;
        }



    </tbody>
</table>

<!-- END MAIN CONTENT -->
<!-- ui-dialog -->
<div id="dialog_simple2" title="Dialog Simple Title 2">
    <div class="row">
        <div class="col-md-12">
            <div>
                <div id="modalDetail"></div>
            </div>
        </div>
    </div>
</div>
<!-- ui-dialog -->
<div id="dialog_simple" title="Dialog Simple Title">
    Beware! Your action will be saved !
</div>
<script type="text/javascript">
        // DO NOT REMOVE : GLOBAL FUNCTIONS!
        var selectedId = 0;
        var deleteMode = false;
        //var countTb = $('#dataLength').data().value;
        for (var i = 0; i < @Model.Length; i++) {
                $('#dialog_link-' + i.toString()).click(function () {
                    $('#dialog_simple').dialog('open');
                    selectedId = $(this).data('itemid');
                    return false;
                });
                $('#dialog_delete-' + i.toString()).click(function () {
                    deleteMode = true;
                    $('#dialog_simple').dialog('open');
                    selectedId = $(this).data('deleteid');
                    return false;
                });
                $('#dialog_modal-' + i.toString()).click(function () {
                    selectedId = $(this).data('modalid');
                    $('#dialog_simple2').dialog('open');
                    return false;
                });
        };

        function ChangeStatus() {
            var allItem = document.querySelectorAll('[data-ItemId]');
            allItem.forEach(function (it) {
                if ($(it).data('itemid') == selectedId) {
                    if ($(it).text() == 'Disable') {
                        $(it).text('Enable');
                        $(it).switchClass('btn-warning', 'btn-success');
                    } else {
                        $(it).text('Disable');
                        $(it).switchClass('btn-success', 'btn-warning');
                    }
                };
            });
        };

        function DeleteRow() {
            document.getElementById('datarow-' + selectedId.toString()).remove();
        };

        $(document).ready(function () {
            $.widget("ui.dialog", $.extend({}, $.ui.dialog.prototype, {
                _title: function (title) {
                    if (!this.options.title) {
                        title.html("&#160;");
                    } else {
                        title.html(this.options.title);
                    }
                }
            }));

            // Dialog click


            $('#dialog_simple').dialog({
                autoOpen: false,
                width: 600,
                resizable: false,
                modal: true,
                title: "<div class='widget-header'><h4><i class='fa fa-warning'></i> Are you sure?</h4></div>",
                buttons: [{
                    html: "<i class='fa fa-warning'></i>&nbsp; Yes",
                    "class": "btn btn-danger",
                    click: function () {
                        if (deleteMode == false) {
                            $.post("@Url.Action("ChangeTaskStatus")", { id: selectedId }, function (data) {
                                if (data == 'Success') {
                                    ChangeStatus();
                                }
                                else {
                                    alert('Wrong permission !')
                                }
                            });
                        } else {
                             $.post("@Url.Action("DeleteTask")", { id: selectedId }, function (data) {
                                if (data == 'Success') {
                                    DeleteRow();
                                }
                                else {
                                    alert('Wrong permission !')
                                }
                            });
                        }
                        $(this).dialog("close");
                    }
                }, {
                    html: "<i class='fa fa-times'></i>&nbsp; Cancel",
                    "class": "btn btn-default",
                        click: function () {
                            selectedId = 0;
                            deleteMode = false;
                        $(this).dialog("close");
                    }
                }]
            });

            $('#dialog_simple2').dialog({
                autoOpen: false,
                position: 'absolute',
                width: 800,
                dialogClass: 'dialogClass',
                open: function () {
                    $('#modalDetail').load("/Task/PartialTaskDetail",
                        { taskId: selectedId });
                },
                resizable: false,
                modal: true,
                title: "<div class='widget-header'><h4><i class='fa fa-warning'></i> Details</h4></div>",
                buttons: [{
                    html: "<i class='fa fa-times'></i>&nbsp; Cancel",
                    "class": "btn btn-default",
                        click: function () {
                            selectedId = 0;
                            deleteMode = false;
                            $(this).dialog("close");
                            $('#btSearch').click();
                    }
                }]
            });


            /*

                /* // DOM Position key index //

                l - Length changing (dropdown)
                f - Filtering input (search)
                t - The Table! (datatable)
                i - Information (records)
                p - Pagination (paging)
                r - pRocessing
                < and > - div elements
                <"#id" and > - div with an id
                <"class" and > - div with a class
                <"#id.class" and > - div with an id and class

                Also see: http://legacy.datatables.net/usage/features
                */

            /* BASIC ;*/
            var responsiveHelper_dt_basic = undefined;
            //var responsiveHelper_datatable_fixed_column = undefined;
            //var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            $('#dt_basic').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });

            /* END BASIC */

            /* TABLETOOLS */
            $('#datatable_tabletools').dataTable({

                // Tabletools options:
                //   https://datatables.net/extensions/tabletools/button_options
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                        "copy",
                        "csv",
                        "xls",
                        {
                            "sExtends": "pdf",
                            "sTitle": "SmartAdmin_PDF",
                            "sPdfMessage": "SmartAdmin PDF Export",
                            "sPdfSize": "letter"
                        },
                        {
                            "sExtends": "print",
                            "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                        }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });

            /* END TABLETOOLS */

        })</script>